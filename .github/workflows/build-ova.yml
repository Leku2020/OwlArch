on:
  push:
    branches:
      - main
      - 'feature/*'
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-ova:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Docker container
        run: |
          docker run --rm -v ${{ github.workspace }}:/$GITHUB_WORKSPACE -w $GITHUB_WORKSPACE archlinux:latest /bin/bash -c "
            #useradd -m builder && echo 'builder:password' | chpasswd && \
            pacman -Sy --noconfirm sudo base-devel git && \
            echo 'paso2' && \
            sudo pacman -Syu --noconfirm && \
            echo 'paso3' && \
            sudo pacman -S --noconfirm archiso arch-install-scripts awk dosfstools e2fsprogs erofs-utils findutils grub gzip libarchive libisoburn mtools openssl pacman sed squashfs-tools edk2-ovmf qemu shellcheck python-docutils gdm virtualbox && \
            echo 'paso4' && \
            cd $GITHUB_WORKSPACE/vm  && \
            mkdir $GITHUB_WORKSPACE/work && \
            mkdir $GITHUB_WORKSPACE/out && \
            ls && \ 
            ln -s /usr/lib/systemd/system/vboxservice.service airootfs/etc/systemd/system/multi-user.target.wants/vboxservice.service && \
            ln -sf /usr/lib/systemd/system/gdm.service airootfs/etc/systemd/system/display-manager.service && \
            sudo mkarchiso -v -w $GITHUB_WORKSPACE/work -o $GITHUB_WORKSPACE/out .  && \
          "

      - name: Upload OVA artifact
        uses: actions/upload-artifact@v4
        with:
          name: owlArchIso
          path: $GITHUB_WORKSPACE/out/*.iso

  approval:
    needs: build-ova
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Esperando aprobaci√≥n manual
        uses: hmarr/auto-approve-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: approval
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download OVA artifact
        uses: actions/download-artifact@v3
        with:
          name: owlArchIso
          path: ./out

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: ./out/*.iso
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
